.row{:style=>"background-color: #eee;"}
  .large-12.columns
    #map-canvas
    #form{:style=>"position:relative; margin-top:0px;"}

      =form_for @listing do |f|
        .meal-section
          %h5 Add a new listing
          .row
            .large-6.columns
              %label Title
              =f.text_field :title
              %label Description
              =f.text_area :description, :rows => "5"
              %label Address
              =f.text_field :address, :class => 'address'
            .large-6.columns
              %label Website URL
              =f.text_field :website
              %label Phone Number
              =f.text_field :phone
              %label Contact Email
              =f.text_field :email

              =f.hidden_field :latitude
              =f.hidden_field :longitude
              =f.hidden_field :city
              #notice
        %hr
        .field
          %h4 Which lists does this belong in?
          %br
          -Category.all.each do |c|
            .category-list
              %b=c.name
              = f.collection_check_boxes :list_ids, c.lists, :id, :name do |b|
                .collection-check-box
                  = b.check_box
                  = b.label

        %hr
        %h4 Add Tags
        %label Tag relevant keywords or topics
        #tag-list
        %input{:type => 'text', :name => 'tags', :class => 'autocomplete', :autocomplete=>'off'}
        .autocomplete-options
        =f.hidden_field :tag_list
        -@tags.each do |tag|
          .tag-choice{:'data-tag'=>tag}=tag
        %hr
        =f.submit "create listing", :class => "button", :id => 'submit-listing'

#address-needed.reveal-modal{"data-reveal" => ""}
  %p

:javascript
  $('#listing_phone').mask('(000) 000-0000');
  var tags = [];

  $(document).on('ready page:load', function(){

    initialize();

    $('#submit-listing').on('click', function(e) {
      e.preventDefault();
      valid = false;
      $('#notice').empty();
      if($('#listing_phone').val().length == 14) {
        console.log('valid phone');
        valid = true;
      }
      if($('#listing_email').val().length > 0) {
        if(isValidEmail($('#listing_email').val())) {
          valid = true;
          console.log('valid email');
        }
        else {
          $('#notice').text('The email address you entered is not valid');
          valid = false;

        }
      }
      if($('#listing_website').val().length > 0) {
        if($('#listing_website').val().substring(0,4) != 'http') {
          $('#listing_website').val('http://'+$('#listing_website').val());
        }
        if(isValidUrl($('#listing_website').val())) {
          valid = true;
        }
        else {
          $('#notice').text('The url you entered is not valid');
          valid = false;
        }
      }
      if($('#listing_title').val().length < 3 || $('#listing_description').val().length < 5) {
        $('#notice').text('Please enter a title AND description.');
        valid = false;
      }
      else {
        valid=true;

      }
      if(!valid) {
          $('html, body').animate({
            scrollTop: $("#new_listing").offset().top
        }, 200);
        $('#notice').append('Please enter at least one contact point (phone, email or url).');
      }
      else {

        if($('#listing_latitude').val().length > 0) {
          $('#new_listing').submit();
        }
        else {
          $('#notice').html("Hmmm, it looks like we can't recognize your address.  Please select one of the address suggested in the dropdown that appears as you type.");
        }
      }

    });

  });



  var initialize;
  initialize = function() {
    var autocomplete, input, map, options;
    input = $('.address');
    options = {
      language: 'en-GB',
      center: new google.maps.LatLng(42.446877, -76.505407),
      zoom: 11
    };
    autocomplete = new google.maps.places.Autocomplete(input[0], options);
    map = new google.maps.Map(document.getElementById('map-canvas'), options);
    google.maps.event.addListener(autocomplete, 'place_changed', function() {
      var place = autocomplete.getPlace();

      $('#listing_latitude').attr("value",place.geometry.location.lat());
      $('#listing_longitude').attr("value",place.geometry.location.lng());
      $('#listing_city').attr("value",place.address_components[2].long_name + "," + place.address_components[4].short_name);

    })

    return google.maps.event.addListener(map, 'bounds_changed', function() {
      autocomplete.bindTo('bounds', map);
    });
  };

  function isValidEmail(emailAddress) {
      var pattern = /^([a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+(\.[a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)*|"((([ \t]*\r\n)?[ \t]+)?([\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*(([ \t]*\r\n)?[ \t]+)?")@(([a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.)+([a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.?$/i;
      return pattern.test(emailAddress);
  };

  function isValidUrl(textval)   // return true or false.
  {

      console.log(textval);
      var urlregex = new RegExp("^(?!www | www\.)[A-Za-z0-9_-]+\.+[A-Za-z0-9.\/%&=\?_:;-]+$");
      return urlregex.test(textval);
  }

  $( document ).on('keyup','.autocomplete', function() {
      if($(this).val().length > 2) {
        $.get('/autocomplete/tags',{q:$(this).val()}, function(data) {
          $('.autocomplete-options').empty();
          $('.autocomplete-options').show();
          $.each(data, function(index,value) {
            console.log(index,value);
            $('.autocomplete-options').append('<div class="autocomplete-option">'+value.name+'</div>');
          });

        });
      }
      else {
        $('.autocomplete-options').empty();
        $('.autocomplete-options').hide();
      }
  });
  $( document ).on( 'click', '.autocomplete-option', function () {
    $('#tag-list').append('<div class="tag" value="' + $(this).text() + '">' + $(this).text() + '<div class="del">X</div></div>');
    $('.autocomplete-options').empty();
    $('.autocomplete-options').hide();
    str = '';
    $('#tag-list').find('.tag').each(function() {

      str += $(this).attr("value") + ',';
    });
    str = str.substring(0,str.length-1);
    $('#listing_tag_list').val(str);
    $('*[data-tag="'+$(this).text()+'"]').addClass('selected');
    setTimeout(function(){
        $('.autocomplete').val('');
        $('.autocomplete').focus();

    }, 100);
  });
  $( document ).on( 'click', '.del', function (event) {
    $(event.target).parent().remove();

    str = '';
    $('#tag-list').find('.tag').each(function() {
      str += $(this).attr("value") + ',';
    });
    str = str.substring(0,str.length-1);
    $('#listing_tag_list').val(str);
    $('.autocomplete').focus();
  })
  $('.tag-choice').on('click', function(e) {
    if($(this).hasClass('selected')) {

      $(event.target).remove();
    }
    else {
      $('#tag-list').append('<div class="tag" value="' + $(this).text() + '">' + $(this).text() + '<div class="del">X</div></div>');
    }
    $(this).toggleClass('selected');
    str = '';
    $('#tag-list').find('.tag').each(function() {
      str += $(this).attr("value") + ',';
    });
    str = str.substring(0,str.length-1);
    $('#listing_tag_list').val(str);
  });
